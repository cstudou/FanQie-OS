BUILD_DIR = ./build
Ttext = 0xc0001000
AS = nasm
CC = i386-elf-gcc
LD = i386-elf-ld
LIB = -I lib/ -I kernel/ -I device/ -I lib/kernel/ 
ASFLAGS = -f elf 
CFLAGS = $(LIB) -c -fno-builtin 
LDFLAGS = -Ttext $(Ttext) -e main

OBJS = $(BUILD_DIR)/main.o $(BUILD_DIR)/init.o $(BUILD_DIR)/interrupt.o \
	   $(BUILD_DIR)/timer.o $(BUILD_DIR)/kernel.o $(BUILD_DIR)/print.o \
	   $(BUILD_DIR)/assert.o $(BUILD_DIR)/string.o $(BUILD_DIR)/memory.o \
	   $(BUILD_DIR)/string.o $(BUILD_DIR)/bitmap.o $(BUILD_DIR)/thread.o \
	   $(BUILD_DIR)/thread.o $(BUILD_DIR)/list.o $(BUILD_DIR)/switch.o \
	   $(BUILD_DIR)/console.o $(BUILD_DIR)/lock.o $(BUILD_DIR)/keyboard.o \
	   $(BUILD_DIR)/ioqueue.o $(BUILD_DIR)/tss.o $(BUILD_DIR)/process.o \
	   $(BUILD_DIR)/syscall.o $(BUILD_DIR)/stdio.o $(BUILD_DIR)/ide.o \
	   $(BUILD_DIR)/filesystem.o $(BUILD_DIR)/dir.o $(BUILD_DIR)/inode.o \
	   $(BUILD_DIR)/superblock.o $(BUILD_DIR)/file.o

$(BUILD_DIR)/main.o: kernel/main.c lib/kernel/print.h lib/kernel/stdint.h kernel/init.h \
				kernel/thread.h kernel/thread.h device/console.h device/ioqueue.h \
				kernel/process.h kernel/syscall.h kernel/stdio.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/init.o: kernel/init.c kernel/init.h lib/kernel/print.h kernel/thread.h \
					lib/kernel/stdint.h kernel/interrupt.h device/timer.h lib/kernel/memory.h \
					device/keyboard.h kernel/tss.h kernel/syscall.h device/ide.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/interrupt.o: kernel/interrupt.c kernel/interrupt.h lib/kernel/stdint.h\
					kernel/global.h lib/kernel/io.h lib/kernel/print.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/process.o: kernel/process.c kernel/process.h kernel/tss.h\
				lib/kernel/memory.h kernel/thread.h
	$(CC) $(CFLAGS) $< -o $@	

$(BUILD_DIR)/ioqueue.o: device/ioqueue.c device/ioqueue.h lib/kernel/stdint.h\
					kernel/lock.h kernel/thread.h 
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/keyboard.o: device/keyboard.c device/keyboard.h kernel/interrupt.h \
				lib/kernel/io.h lib/kernel/print.h device/ioqueue.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/timer.o: device/timer.c device/timer.h lib/kernel/stdint.h \
				lib/kernel/io.h lib/kernel/print.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/list.o: lib/kernel/list.c lib/kernel/list.h kernel/interrupt.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/thread.o: kernel/thread.c kernel/thread.h lib/kernel/string.h kernel/process.h\
			lib/kernel/stdint.h kernel/interrupt.h lib/kernel/memory.h lib/kernel/list.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/syscall.o: kernel/syscall.c kernel/syscall.h kernel/thread.h lib/kernel/stdint.h lib/kernel/print.h device/console.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/tss.o: kernel/tss.c kernel/tss.h lib/kernel/stdint.h\
					kernel/global.h kernel/thread.h
	$(CC) $(CFLAGS) $< -o $@	

$(BUILD_DIR)/lock.o: kernel/lock.c kernel/lock.h lib/kernel/stdint.h\
				kernel/interrupt.h  lib/kernel/list.h kernel/thread.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/stdio.o: kernel/stdio.c kernel/stdio.h lib/kernel/print.h\
				kernel/syscall.h  
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/console.o: device/console.c device/console.h kernel/lock.h kernel/thread.h \
				lib/kernel/stdint.h lib/kernel/print.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/ide.o: device/ide.c device/ide.h kernel/lock.h device/timer.h kernel/stdio.h\
				lib/kernel/stdint.h lib/kernel/print.h lib/kernel/bitmap.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/assert.o: kernel/assert.c kernel/assert.h lib/kernel/print.h\
				lib/kernel/stdint.h kernel/interrupt.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/bitmap.o: lib/kernel/bitmap.c lib/kernel/bitmap.h lib/kernel/print.h\
			lib/kernel/stdint.h kernel/interrupt.h kernel/assert.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/string.o: lib/kernel/string.c lib/kernel/string.h kernel/assert.h lib/kernel/print.h lib/kernel/stdint.h 
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/memory.o: lib/kernel/memory.c lib/kernel/memory.h lib/kernel/print.h\
			lib/kernel/stdint.h lib/kernel/bitmap.h kernel/assert.h kernel/thread.h\
			kernel/lock.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/dir.o: fs/dir.c fs/dir.h lib/kernel/stdint.h fs/filesystem.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/inode.o: fs/inode.c fs/inode.h lib/kernel/stdint.h fs/filesystem.h lib/kernel/list.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/superblock.o: fs/superblock.c fs/superblock.h lib/kernel/stdint.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/filesystem.o: fs/filesystem.c fs/filesystem.h fs/inode.h device/ide.h fs/dir.h fs/superblock.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/file.o: fs/file.c fs/file.h device/inode.h lib/kernel/stdint.h
	$(CC) $(CFLAGS) $< -o $@
$(BUILD_DIR)/kernel.o: kernel/kernel.S
	$(AS) $(ASFLAGS) $< -o $@
$(BUILD_DIR)/print.o: lib/kernel/print.S lib/include/head.inc
	$(AS) $(ASFLAGS) $< -o $@
$(BUILD_DIR)/switch.o: kernel/switch.S
	$(AS) $(ASFLAGS) $< -o $@

$(BUILD_DIR)/kernel.bin: $(OBJS)
	$(LD) $(LDFLAGS) $^ -o $@

.PHONY: build clean init dd all 

build: $(BUILD_DIR)/kernel.bin

clean:
	rm -rf ./build/*.bin
	rm -rf ./build/*.lock
	rm -rf ./build/hd3M.img
	rm -rf ./hd3M.img
	rm -rf ./build/*.o
	rm -rf ./*.bin
init:
	bximage -hd=10 -mode=create -sectsize=512 -q ./hd3M.img

dd:
	nasm -I ./boot/include -o mbr.bin ./boot/mbr.S
	nasm -I ./boot/include -o loader.bin ./boot/loader.S
	dd if=./mbr.bin of=./hd3M.img bs=512 count=1 conv=notrunc
	dd if=./loader.bin of=./hd3M.img bs=512 count=4 seek=2 conv=notrunc
	dd if=build/kernel.bin of=hd3M.img bs=512 count=200 seek=9 conv=notrunc

all: clean build init dd 